@charset "UTF-8";
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0-modified | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* make sure to set some focus styles for accessibility */
:focus {
  outline: 0;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-results-button,
input[type=search]::-webkit-search-results-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
}

input[type=search] {
  -webkit-appearance: none;
  -moz-appearance: none;
  box-sizing: content-box;
}

textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical;
}

/**
 * Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 */
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  max-width: 100%;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address styling not present in IE 7/8/9, Firefox 3, and Safari 4.
 * Known issue: no IE 6 support.
 */
[hidden] {
  display: none;
}

/**
 * 1. Correct text resizing oddly in IE 6/7 when body `font-size` is set using
 *    `em` units.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-size: 10px;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/**
 * 1. Remove border when inside `a` element in IE 6/7/8/9 and Firefox 3.
 * 2. Improve image quality when scaled in IE 7.
 */
img {
  border: 0;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */
}

/**
 * Address margin not present in IE 6/7/8/9, Safari 5, and Opera 11.
 */
figure {
  margin: 0;
}

/**
 * Correct margin displayed oddly in IE 6/7.
 */
form {
  margin: 0;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct color not being inherited in IE 6/7/8/9.
 * 2. Correct text not wrapping in Firefox 3.
 * 3. Correct alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  white-space: normal;
  /* 2 */
  *margin-left: -7px;
  /* 3 */
}

/**
 * 1. Correct font size not being inherited in all browsers.
 * 2. Address margins set differently in IE 6/7, Firefox 3+, Safari 5,
 *    and Chrome.
 * 3. Improve appearance and consistency in all browsers.
 */
button,
input,
select,
textarea {
  font-size: 100%;
  /* 1 */
  margin: 0;
  /* 2 */
  vertical-align: baseline;
  /* 3 */
  *vertical-align: middle;
  /* 3 */
}

/**
 * Address Firefox 3+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 6+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 * 4. Remove inner spacing in IE 7 without affecting normal text inputs.
 *    Known issue: inner spacing remains in IE 6.
 */
button,
html input[type=button],
input[type=reset],
input[type=submit] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
  *overflow: visible;
  /* 4 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * 1. Address box sizing set to content-box in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 * 3. Remove excess padding in IE 7.
 *    Known issue: excess padding remains in IE 6.
 */
input[type=checkbox],
input[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
  *height: 13px;
  /* 3 */
  *width: 13px;
  /* 3 */
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Remove inner padding and border in Firefox 3+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * 1. Remove default vertical scrollbar in IE 6/7/8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

html,
button,
input,
select,
textarea {
  color: #222;
}

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

img {
  vertical-align: middle;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

textarea {
  resize: vertical;
}

.chromeframe {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

body {
  font-family: Arial;
  font-size: 1.4rem;
  color: #FFFFFA;
  background-color: #FFFFFA;
}

.main {
  line-height: 3rem;
}

.col {
  display: flex;
  flex-direction: column;
  padding: 0 3.5rem;
}

.row3in1 {
  display: flex;
  padding: 3.5rem 0;
  text-align: center;
  justify-content: space-between;
  align-items: flex-start;
}

.h1 {
  font-size: 4.8rem;
}

.h2 {
  font-size: 3.6rem;
}

.h3 {
  font-size: 3.2rem;
}

.btn {
  border: none;
  background-color: #FF6600;
  color: #FFFFFA;
  font-weight: bold;
  font-size: 2rem;
}

.btn-lg {
  padding: 2rem 5rem;
}

.btn-sml {
  padding: 0;
}

.container {
  max-width: 1440px;
  margin: 0 auto;
  box-sizing: border-box;
}

.flex-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 5rem 2rem;
}

.row-light {
  background-color: #5B605F;
}

.row-dark {
  background-color: #4a4a49;
}

.website-link-logo {
  cursor: pointer;
}

a {
  text-decoration: none;
  color: inherit;
}

.opening-panel {
  width: 80vw;
  height: 80vh;
  margin: 0 auto;
}

textarea {
  font-family: Arial;
}

.user {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  margin-top: 9rem;
  margin-bottom: 9rem;
}
.user__image {
  width: 35rem;
  height: 35rem;
  -o-object-fit: cover;
     object-fit: cover;
  margin-right: 14rem;
  border: 3px solid #A1A194;
  box-shadow: 0 0 30px black;
}
.user__col {
  align-self: flex-start;
  color: black;
}
.user__text {
  font-size: 2.4rem;
  margin-top: 3rem;
  max-width: 80%;
}

.newsletter__header {
  font-size: 4.8rem;
  color: #FFFFFA;
}
.newsletter__form {
  display: flex;
}
.newsletter__text-input {
  width: 26.5rem;
  height: 100%;
  padding: 0 1rem;
  border: none;
  border-radius: 5px 0 0 5px;
}
.newsletter__btn {
  border-radius: 0 5px 5px 0;
}

.footer__col {
  text-align: left;
  max-width: 21%;
}
.footer__text {
  font-size: 2.4rem;
}
.footer__header {
  margin-bottom: 2.5rem;
}
.footer__list {
  list-style: inside;
}
.footer__text-input {
  width: 15.5rem;
  min-height: 3.5rem;
  padding: 0 1rem;
  border: none;
  border-radius: 5px 0 0 5px;
}
.footer__btn {
  padding: 0.6rem 1rem;
  border-radius: 0 5px 5px 0;
}
.footer__icons {
  font-size: 4rem;
  margin-top: 30px;
}
.footer__icon_link {
  color: #FFFFFA;
}

.page-bottom {
  font-size: 2rem;
  text-align: center;
}
.page-bottom__accent {
  color: #FF6600;
}
.page-bottom__container {
  padding: 2rem 0;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 100%;
  padding: 0 5rem;
  background-color: #4a4a49;
}
.header__logo {
  font-family: "Charmonman", cursive;
  padding-left: 5rem;
}
.header__accent {
  color: #FF6600;
}
.header__nav {
  display: flex;
  font-size: 1.6rem;
}
.header__menu-item {
  padding: 0;
}
.header__link {
  text-decoration: none;
  font-size: 1.6rem;
  display: block;
  padding: 5rem 6rem;
  color: #FFFFFA;
  text-align: center;
  transition: 0.3s ease-in-out;
}
.header__link:hover {
  transform: scale(1.2);
  color: #FF6600;
  transition: 0.3s ease-in-out;
}

.cta__header3 {
  font-size: 3.6rem;
  margin: 3rem 0;
}
.cta__content {
  padding-right: 5rem;
  max-width: 90rem;
}
.cta__par {
  font-size: 2.4rem;
  margin: 3rem 0;
}
.cta__bckg {
  background-color: #4a4a49;
}
.cta__btn {
  border-radius: 5px;
}

.features {
  background-color: #FFFFFA;
  color: #5B605F;
  padding: 12rem 0;
}
.features__container {
  display: flex;
  justify-content: center;
  align-items: center;
}
.features__txt {
  font-size: 2.4rem;
}
.features__h3 {
  padding-bottom: 2rem;
}
.features-item {
  padding-bottom: 3rem;
}
.features__col {
  width: 35rem;
  text-align: center;
  padding: 0 4rem;
}
.features ::before {
  color: #A1A194;
  font-family: "Font Awesome 5 Free";
  font-size: 10rem;
}

.slider {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-around;
  position: relative;
}
.slider__container {
  transition: 1s;
}
.slider__arrow {
  margin: 0 5px;
  cursor: pointer;
  position: absolute;
  color: #FFFFFA;
  transition: 0.2s ease-in-out;
}
.slider__arrow:hover {
  transform: scale(1.5);
  transition: 0.2s ease-in-out;
}
.slider__arrow_left {
  left: 10rem;
}
.slider__arrow_right {
  right: 10rem;
}
.slider__slide {
  display: none;
  flex: 1;
  max-height: 44rem;
  -o-object-fit: cover;
     object-fit: cover;
  width: 98.9vw;
  transition: 1s;
}
.slider__active {
  display: block;
}

.app-header {
  padding: 3rem;
}
.app-header__logo {
  position: relative;
  font-family: "Charmonman", cursive;
}
.app-header__logo::after {
  content: "";
  display: block;
  height: 7rem;
  border-right: 0.5px solid white;
  position: absolute;
  top: -2rem;
  right: -2rem;
  opacity: 50%;
}
.app-header__user-section {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.app-header__user {
  font-size: 2.4rem;
  padding-right: 2rem;
  gap: 1rem;
}
.app-header__icon {
  font-size: 4rem;
  color: #FF6600;
}

.header-height {
  height: 10vh;
}

.sidebar {
  height: 90vh;
  background-color: #5B605F;
  width: 15vw;
}

.app-main__side-column {
  display: flex;
  flex-flow: column;
  font-size: 2rem;
  padding-left: 1.5rem;
  position: relative;
}
.app-main__column-item {
  border-left: 5px solid #5B605F;
  padding: 2rem 1rem 2rem 2rem;
  font-size: 2.5rem;
  position: relative;
  transition: 0.3s ease-in-out;
  text-align: left;
}
.app-main__column-item:hover {
  cursor: pointer;
  border-left: 5px solid #FF6600;
  transform: scale(1.1);
  transition: 0.3s ease-in-out;
}
.app-main__column-item:hover::after {
  content: "";
  width: 1rem;
  height: 1rem;
  border: solid #FF6600;
  border-width: 0.4rem 0.4rem 0 0;
  transform: translateY(50%) rotate(45deg);
  right: 1.8rem;
  position: absolute;
}

.app-main {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
}
.app-main__body {
  padding: 1rem 2rem;
  display: block;
  /*nadpisałem none na block po modyfikacji toggla.
  Teraz moze byc juz toggle pomiedzy #display-panel a #welcome-message
  bo dodalismy kolejne sekcje - Maciek*/
  /*TUTAJ USTAWIŁEM DISPLAY NONE!
    JAK W WELCOME MSG PODASZ IMIĘ TO ZMIENIA SIĘ
    NA DISPLAY BLOCK ~ Łukasz */
}
.app-main__first-row {
  display: flex;
  justify-content: space-between;
  gap: 2rem;
  background-color: none;
}

.wrapper {
  flex-direction: row;
  justify-content: center;
  align-items: center;
  height: 90vh;
  width: 85vw;
}

.app-main__widgets {
  display: flex;
  font-size: 2rem;
  gap: 4rem;
}
.app-main__widget {
  text-decoration: none;
  color: #468966;
  display: flex;
  flex-flow: column;
  padding: 2rem 1rem;
  background-color: #FFFFFA;
  border: 1px dashed #468966;
  justify-content: space-evenly;
  text-align: center;
  font-size: 3rem;
  font-weight: bold;
  min-width: 20rem;
}
.app-main__widget-icon {
  font-size: 8rem;
  cursor: pointer;
}
.app-main__widget-text {
  font-size: 2.4rem;
}

.welcome-message {
  width: 80vw;
  height: 80vh;
  background-color: #FFFFFA;
  border: 1px black dashed;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.welcome-message .internal-wrapper {
  font-family: Arial;
  font-size: 1.2rem;
  color: #4a4a49;
  text-align: center;
}
.welcome-message .internal-wrapper .form {
  justify-content: space-between;
  align-items: center;
  margin: 3.2rem auto;
  height: 11rem;
}
.welcome-message .internal-wrapper .form #name {
  height: 2.5rem;
  width: 400px;
}
.welcome-message .internal-wrapper .form #name::-moz-placeholder {
  font-size: 2.2rem;
}
.welcome-message .internal-wrapper .form #name:-ms-input-placeholder {
  font-size: 2.2rem;
}
.welcome-message .internal-wrapper .form #name::placeholder {
  font-size: 2.2rem;
}
.welcome-message .internal-wrapper .form .btn {
  width: 12.8rem;
  height: 4.8rem;
  font-size: 2rem;
  text-align: center;
}
.welcome-message .internal-wrapper .form .btn:hover {
  border: 1px solid #4a4a49;
}
.welcome-message .internal-wrapper .form .btn:active {
  border: 3px solid #4a4a49;
}
.welcome-message .internal-wrapper p {
  font-size: 2rem;
  font-weight: 600;
}

.app-main__messages {
  font-size: 2rem;
  flex-basis: 57%;
  display: flex;
  flex-direction: column;
  gap: 2rem;
  justify-content: space-between;
  font-weight: bold;
}
.app-main__message {
  background-color: #FFFFFA;
  display: flex;
  justify-content: space-between;
  border: dashed 1px;
  gap: 1rem;
  padding: 1rem;
  align-items: center;
  text-align: left;
}
.app-main__message_1 {
  color: #3498DB;
}
.app-main__message_2 {
  color: #FFB03B;
}
.app-main__message_3 {
  color: #468966;
}
.app-main__icon_message-right {
  transform: translateY(-50%);
  font-size: 2.4rem;
  cursor: pointer;
}
.app-main__icon_message-left {
  font-size: 3rem;
  cursor: pointer;
}

#schedule {
  box-sizing: border-box;
  width: 100%;
  height: 70%;
  background-color: #FFFFFA;
  border: 1px black dashed;
  margin-top: 1.6rem;
  padding: 1.6rem 1.6rem 10rem;
}
#schedule table {
  width: 100%;
  border-collapse: collapse;
}
#schedule table caption {
  color: #FFB03B;
  font-size: 2rem;
  padding-bottom: 0.8rem;
  font-weight: 800;
  border-bottom: 0.5px solid #4a4a49;
}
@media screen and (min-width: 1400px) {
  #schedule table caption {
    font-size: 2.4rem;
  }
}
#schedule table tr th {
  font-size: 1.6rem;
  font-weight: bold;
  text-align: left;
  color: #4a4a49;
  line-height: 3.3rem;
  border-bottom: 0.5px solid #4a4a49;
}
@media screen and (min-width: 1400px) {
  #schedule table tr th {
    font-size: 2.4rem;
    line-height: 4.8rem;
  }
}
#schedule table tr td {
  color: #4a4a49;
  font-size: 1.6rem;
  line-height: 3.2rem;
  border-bottom: 0.5px solid #4a4a49;
}
@media screen and (min-width: 1400px) {
  #schedule table tr td {
    font-size: 2.2rem;
    line-height: 4.8rem;
  }
}

.schedule__button {
  margin-top: 1.5rem;
  padding: 0;
  width: auto;
  color: #FFB03B;
  border: none;
  font-size: 1.6rem;
  overflow: visible;
  background: transparent;
  line-height: normal;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  cursor: pointer;
}
.schedule__button i {
  margin-left: 0.5px;
  margin-right: 0.5px;
  font-size: 1.6rem;
}
@media screen and (min-width: 1400px) {
  .schedule__button i {
    font-size: 1.9rem;
  }
}
.schedule__button:focus {
  outline: none;
}
.schedule__button::-moz-focus-inner {
  border: 0;
  padding: 0;
}
.schedule__button_prev {
  float: left;
  margin: 0.8rem;
  transform: translateY(-400%);
}
.schedule__button_next {
  float: right;
  margin: 0.8rem;
  transform: translateY(-400%);
}

.recipes {
  color: #4a4a49;
  padding: 4rem;
  box-sizing: border-box;
  font-size: 1.6rem;
  background-color: #FFFFFA;
  display: none;
  border: 2px solid #4a4a49;
  box-shadow: 0 0 5px #4a4a49;
  display: none;
}
.recipes__large-font {
  font-size: 2.4rem;
}
.recipes__row {
  display: flex;
  justify-content: space-between;
  width: 100%;
}
.recipes__row1 {
  border-bottom: 2px solid lightgray;
  padding-bottom: 0.5rem;
}
.recipes__title {
  color: #FF6600;
  font-weight: bold;
}
.recipes__btn {
  background-color: #FF6600;
  color: #FFFFFA;
  font-weight: bold;
  text-align: center;
  padding: 0.6rem 1rem;
  font-size: 1.6rem;
  border-radius: 5px;
}
.recipes__name {
  width: 30%;
  margin: 1rem;
}
.recipes__row2 {
  padding-bottom: 0.5rem;
}
.recipes__row2-label {
  width: 70%;
  margin: 1rem 10rem 2rem 1rem;
}
.recipes__row2-input {
  width: 100%;
}
.recipes__row3-label {
  width: 70%;
  margin: 1rem 10rem 4rem 1rem;
}
.recipes__row3-input {
  width: 100%;
}
.recipes__description {
  margin: 1rem;
  width: 30%;
}
.recipes__row4 {
  gap: 2rem;
}
.recipes__col {
  width: 50%;
}
.recipes__col-header {
  border-bottom: 2px solid lightgray;
  padding-bottom: 0.5rem;
  margin-bottom: 1rem;
}
.recipes__col1_input {
  width: 80%;
  resize: none;
}
.recipes__col2_input {
  width: 80%;
  resize: none;
}
.recipes__row4 {
  margin-bottom: 5rem;
}
.recipes__row5 {
  gap: 2rem;
}
.recipes__list {
  margin-left: 1.7rem;
  overflow-y: scroll;
  max-height: 15rem;
}
.recipes__list-item {
  line-height: 2rem;
  margin: 1rem 2rem;
  vertical-align: center;
}
.recipes__list-item_ingr {
  list-style: disc;
}
.recipes__list-item_inst {
  list-style: decimal;
}
.recipes__edit-icon {
  color: #FFB03B;
  cursor: pointer;
  transform: translateX(25%);
}
.recipes__remove-icon {
  color: #BD4932;
  cursor: pointer;
  transform: translateX(50%);
}
.recipes__add {
  color: #468966;
  font-size: 3rem;
  transform: translate(15%, -30%);
  cursor: pointer;
}

.new-plan {
  color: #4a4a49;
  outline: 1px solid black;
  padding: 1rem;
  box-sizing: border-box;
  font-size: 1.2rem;
  display: none;
  background-color: #FFFFFA;
}
.new-plan__heading {
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid black;
  padding-bottom: 10px;
  color: #FF6600;
  font-weight: bold;
  font-size: 2rem;
}
.new-plan__btn {
  background-color: #FF6600;
  color: #FFFFFA;
  font-size: 1.5rem;
  border: none;
  padding: 15px;
}
.new-plan__name {
  padding: 1rem;
}
.new-plan__name label {
  font-size: 2rem;
  width: 10%;
  padding-right: 5.8rem;
}
.new-plan__name input {
  height: 2rem;
  width: 75%;
}
.new-plan__description {
  padding: 1rem;
}
.new-plan__description label {
  font-size: 2rem;
  width: 10%;
  padding-right: 7.9rem;
}
.new-plan__description textarea {
  height: 6rem;
  width: 75%;
  resize: none;
}
.new-plan__week-number {
  padding: 1rem;
  display: flex;
  align-items: center;
}
.new-plan__week-number label {
  font-size: 2rem;
  width: 17.6rem;
}
.new-plan__week-number input {
  height: 25px;
  width: 25px;
}
.new-plan table {
  width: 100%;
}
.new-plan table th {
  border-top: 0.5px #4a4a49 solid;
  font-weight: bold;
  font-size: 2rem;
  line-height: 3rem;
  text-align: center;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.new-plan table td {
  padding-left: 2rem;
  width: 20%;
  border-top: 1px #4a4a49 solid;
}
.new-plan table select {
  width: 90%;
  border-radius: 5px;
  height: 2rem;
}

.schedules {
  color: #4a4a49;
  outline: 1px solid black;
  padding: 2rem;
  box-sizing: border-box;
  font-size: 1.2rem;
  background-color: #FFFFFA;
}
.schedules__heading {
  border-bottom: 2px #4a4a49 solid;
  padding-bottom: 10px;
  color: #FF6600;
  font-weight: bold;
  font-size: 3rem;
}
.schedules__table-heading {
  margin-top: 1rem;
  color: #4a4a49;
  font-size: 2rem;
  font-weight: bold;
  /*  border-bottom: 1px $color-secondary solid;*/
  border-top: 1px #4a4a49 solid;
  width: 95%;
  transform: translateX(1%);
}
.schedules table {
  width: 100%;
}
.schedules th {
  text-align: left;
  padding: 1rem;
}
.schedules td {
  padding: 1rem;
  font-weight: normal;
  font-size: 1.5rem;
  border-top: 1px solid #4a4a49;
}
.schedules__id {
  width: 5%;
}
.schedules__name {
  width: 20%;
}
.schedules__description {
  width: 60%;
}
.schedules__week {
  width: 10%;
}
.schedules__actions {
  width: 10%;
}

.app {
  background-image: url("../images/app_background.png");
  max-width: 100%;
  overflow-y: hidden;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
